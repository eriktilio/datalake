version: "3.7"

services:
  elasticsearch:
    build:
      context: elasticsearch/
      dockerfile: Dockerfile
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    container_name: elasticsearch
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_USER: ${ELASTIC_USER}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LICENSE: ${LICENSE}
      discovery.type: single-node
    networks:
      - datalake
    restart: unless-stopped

  logstash:
    build:
      context: logstash/
      dockerfile: Dockerfile
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    container_name: logstash
    volumes:
      - ./logstash/config:/usr/share/logstash/config:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
      - ./logstash/files:/files
    ports:
      - 8080:8080
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      ELASTIC_HOST: ${ELASTIC_HOST}
      ELASTIC_USER: ${ELASTIC_USER}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
    networks:
      - datalake
    depends_on:
      - elasticsearch
    restart: unless-stopped

  kibana:
    build:
      context: kibana/
      dockerfile: Dockerfile
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    container_name: kibana
    ports:
      - 5601:5601
    environment:
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - datalake
    depends_on:
      - elasticsearch

networks:
  datalake:
    driver: bridge

volumes:
  elasticsearch:
