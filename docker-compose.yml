version: "3.7"

services:
  elasticsearch:
    build:
      context: ./elasticsearch
      dockerfile: Dockerfile
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    container_name: elasticsearch
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - elasticsearch:/usr/share/elasticsearch/data:Z
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      node.name: elasticsearch
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      discovery.type: single-node
    networks:
      - datalake
    restart: unless-stopped

  logstash:
    build:
      context: ./logstash
      dockerfile: Dockerfile
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    container_name: logstash
    volumes:
      - ./logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro,Z
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
      - ./logstash/files:/files/
    ports:
      - 8080:8080
      - 5044:5044
      - 50000:50000/tcp
      - 50000:50000/udp
      - 9600:9600
    environment:
      LS_JAVA_OPTS: -Xms256m -Xmx256m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - datalake
    depends_on:
      - elasticsearch
    restart: unless-stopped

  opc_data_generator:
    build:
      context: ./opc_mock
      dockerfile: Dockerfile
    container_name: opc_data_generator
    ports:
      - 4840:4840
    networks:
      - datalake
    restart: unless-stopped

  client_opcua:
    build:
      context: ./client_opcua
      dockerfile: Dockerfile
    container_name: client_opcua
    networks:
      - datalake
    restart: unless-stopped

  mysql_database:
    build:
      context: ./mysql_database
      dockerfile: Dockerfile
    container_name: mysql_database
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - datalake
    restart: unless-stopped

networks:
  datalake:
    driver: bridge

volumes:
  elasticsearch:
