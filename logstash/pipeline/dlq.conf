# Configuração de entrada (input) para o plugin Dead Letter Queue (DLQ).
input {
  dead_letter_queue {
    # O caminho para o diretório onde as mensagens da DLQ serão armazenadas.
    path => "/usr/share/logstash/data/dead_letter_queue"
    
    # Indica se as mensagens consumidas da DLQ devem ser removidas ou mantidas para inspeção manual.
    clean_consumed => true
    
    # O tipo associado às mensagens na DLQ.
    type => "dlq"
    
    # Identificador único para esta configuração da DLQ.
    id => "dlq"
  }
}

# Configuração do filtro (filter) para adicionar um campo indicando se um evento é da Dead Letter Queue (DLQ).
filter {
  mutate {
    add_field => {
      # Adiciona um campo "dead_letter" contendo informações sobre a DLQ associada ao evento.
      "dead_letter" => "%{[@metadata][dead_letter_queue]}"
    }
  }
}

# Configuração de saída (output) para enviar eventos da DLQ para o Elasticsearch e para a saída padrão (stdout).
output {
  # Configuração de saída para o Elasticsearch, especificando o endereço, usuário, senha, e índice para armazenar as mensagens da DLQ.
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => "elastic"
    password => "changeme"
    index => "dlq"
  }

  # Configuração de saída para a saída padrão (console), utilizando o codec RubyDebug para formatar a saída.
  stdout {
    codec => "rubydebug"
  }
}
